{"ast":null,"code":"var _jsxFileName = \"/home/meriam/testwapp/WApplication/Partie Client/src/views/CreateJobOffer/JobCreateView/ProfileDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Container, Card, CardContent, CardHeader, Divider, Grid, TextField, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst ProfileDetails = () => {\n  _s();\n\n  const classes = useStyles(); //ici c'est pour quand on valide il 'ya Link vers une autre page\n\n  const navigate = useNavigate();\n  return /*#__PURE__*/React.createElement(Page, {\n    className: classes.root,\n    title: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      SocieteName: '',\n      adress: '',\n      JobDescription: '',\n      JobRequirements: '',\n      HowToApply: '',\n      recruteurName: ''\n    },\n    validationSchema: Yup.object().shape({\n      SocieteName: Yup.string().max(255).required('SocieteName is required'),\n      adress: Yup.string().max(255).required('adress name is required'),\n      JobDescription: Yup.string().max(255).required('JobDescription name is required'),\n      JobRequirements: Yup.string().max(255).required('JobRequirements is required'),\n      HowToApply: Yup.string().max(255).required('HowToApply is required'),\n      recruteurName: Yup.string().max(255).required('recruteurName is required') // isRecruiter: Yup.boolean().oneOf([true], 'This field must be checked')\n\n    }),\n    onSubmit: async values => {\n      const res = await axios.post('http://127.0.0.1:3003/post', { ...values\n      });\n      console.log('res', res);\n      navigate('/app/Job-offer', {\n        replace: true\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 1\n    }\n  }, ({\n    errors,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    isSubmitting,\n    touched,\n    values\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    subheader: \"The information can be edited\",\n    title: \"Create Job Offer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.SocieteName && errors.SocieteName),\n    fullWidth: true,\n    helperText: touched.SocieteName && errors.SocieteName,\n    label: \"SocieteName\",\n    name: \"SocieteName\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    required: true,\n    value: values.SocieteName,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.adress && errors.adress),\n    fullWidth: true,\n    helperText: touched.adress && errors.adress,\n    label: \"adress\",\n    name: \"adress\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    required: true,\n    value: values.adress,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.JobDescription && errors.JobDescription),\n    fullWidth: true,\n    helperText: touched.JobDescription && errors.JobDescription,\n    label: \"JobDescription\",\n    name: \"JobDescription\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    required: true,\n    value: values.JobDescription,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.JobRequirements && errors.JobRequirements),\n    fullWidth: true,\n    helperText: touched.JobRequirements && errors.JobRequirements,\n    label: \"JobRequirements\",\n    name: \"JobRequirements\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    required: true,\n    value: values.JobRequirements,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.HowToApply && errors.HowToApply),\n    fullWidth: true,\n    helperText: touched.HowToApply && errors.HowToApply,\n    label: \"HowToApply\",\n    name: \"HowToApply\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    required: true,\n    value: values.HowToApply,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.recruteurName && errors.recruteurName),\n    fullWidth: true,\n    helperText: touched.recruteurName && errors.recruteurName,\n    label: \"recruteurName\",\n    name: \"recruteurName\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    required: true,\n    value: values.recruteurName,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: isSubmitting,\n    fullWidth: true,\n    color: \"primary\",\n    variant: \"contained\",\n    type: \"submit\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, \"Save details\")))))));\n};\n\n_s(ProfileDetails, \"pvfM4ZXsoMI5DaOvCNwyBjRqjLg=\", false, function () {\n  return [useStyles, useNavigate];\n});\n\n_c = ProfileDetails;\nProfileDetails.propTypes = {\n  className: PropTypes.string\n};\nexport default ProfileDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileDetails\");","map":{"version":3,"sources":["/home/meriam/testwapp/WApplication/Partie Client/src/views/CreateJobOffer/JobCreateView/ProfileDetails.js"],"names":["React","useState","clsx","PropTypes","Link","RouterLink","useNavigate","Yup","Formik","Box","Button","Container","Card","CardContent","CardHeader","Divider","Grid","TextField","makeStyles","Page","axios","useStyles","theme","root","backgroundColor","palette","background","dark","height","paddingBottom","spacing","paddingTop","ProfileDetails","classes","navigate","SocieteName","adress","JobDescription","JobRequirements","HowToApply","recruteurName","object","shape","string","max","required","values","res","post","console","log","replace","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","propTypes","className"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik  } from 'formik';\n\nimport {\n  Box,\n  Button,\n  Container,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst ProfileDetails = () => {\n  const classes = useStyles();\n  //ici c'est pour quand on valide il 'ya Link vers une autre page\n  const navigate = useNavigate();\n\n  return (\n     <Page\n      className={classes.root}\n      title=\"Register\"\n    >\n     <Container maxWidth=\"sm\">\n    {/* //debut partie Formik : */}\n\n<Formik\n            initialValues={{\n              SocieteName: '',\n              adress: '',\n              JobDescription: '',\n              JobRequirements: '',\n              HowToApply: '',\n              recruteurName: ''\n            }}\n            validationSchema={\n              Yup.object().shape({\n                SocieteName: Yup.string().max(255).required('SocieteName is required'),\n                adress: Yup.string().max(255).required('adress name is required'),\n                JobDescription: Yup.string().max(255).required('JobDescription name is required'),\n                JobRequirements: Yup.string().max(255).required('JobRequirements is required'),\n                HowToApply: Yup.string().max(255).required('HowToApply is required'),\n                recruteurName: Yup.string().max(255).required('recruteurName is required'),\n                // isRecruiter: Yup.boolean().oneOf([true], 'This field must be checked')\n              })\n            }\n            onSubmit={async(values) => {\n              const res = await axios.post('http://127.0.0.1:3003/post',{...values})\n                            console.log('res', res);\n\n              navigate('/app/Job-offer', { replace: true })\n              \n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n    <form onSubmit={handleSubmit}>\n      <Card>\n        <CardHeader\n          subheader=\"The information can be edited\"\n          title=\"Create Job Offer\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n              error={Boolean(touched.SocieteName && errors.SocieteName)}\n                fullWidth\n                helperText={touched.SocieteName && errors.SocieteName}\n                label=\"SocieteName\"\n                name=\"SocieteName\"\n                 onBlur={handleBlur}\n                onChange={handleChange}\n                required\n                value={values.SocieteName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n              error={Boolean(touched.adress && errors.adress)}\n                fullWidth\n                  helperText={touched.adress && errors.adress}\n                label=\"adress\"\n                name=\"adress\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                required\n                value={values.adress}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n               error={Boolean(touched.JobDescription && errors.JobDescription)}\n                fullWidth\n                helperText={touched.JobDescription && errors.JobDescription}\n                label=\"JobDescription\"\n                name=\"JobDescription\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                required\n                value={values.JobDescription}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n              error={Boolean(touched.JobRequirements && errors.JobRequirements)}\n                fullWidth\n                helperText={touched.JobRequirements && errors.JobRequirements}\n                label=\"JobRequirements\"\n                name=\"JobRequirements\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n               required\n                value={values.JobRequirements}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                error={Boolean(touched.HowToApply && errors.HowToApply)}\n                fullWidth\n                helperText={touched.HowToApply && errors.HowToApply}\n                label=\"HowToApply\"\n                name=\"HowToApply\"\n                 onBlur={handleBlur}\n                onChange={handleChange}\n                required\n                value={values.HowToApply}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                 error={Boolean(touched.recruteurName && errors.recruteurName)}\n                fullWidth\n                helperText={touched.recruteurName && errors.recruteurName}\n                label=\"recruteurName\"\n                name=\"recruteurName\"\n                 onBlur={handleBlur}\n                onChange={handleChange}\n                required\n                value={values.recruteurName}\n                variant=\"outlined\"\n              >\n              </TextField>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n          disabled={isSubmitting}\n             fullWidth\n            color=\"primary\"\n            variant=\"contained\"\n             type=\"submit\"\n            variant=\"contained\"\n          >\n            Save details\n          </Button>\n        </Box>\n       \n      </Card>\n    </form>\n    )}\n          </Formik>\n    </Container>\n    </Page>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProfileDetails;\n"]},"metadata":{},"sourceType":"module"}