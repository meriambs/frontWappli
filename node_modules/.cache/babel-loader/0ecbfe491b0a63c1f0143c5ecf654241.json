{"ast":null,"code":"var _jsxFileName = \"/home/meriam/testwapp/WApplication/Partie Client/src/views/ProfilUpdate/ProfilUpdateView/ProfileDetails.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Page from 'src/components/Page'; // partie add \n\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Card, CardContent, CardHeader, Container, Divider, Grid, TextField, makeStyles } from '@material-ui/core';\nimport axios from 'axios';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nimport { useSelector } from 'react-redux';\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProfileDetails = ({\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    enqueueSnackbar,\n    closeSnackbar\n  } = useSnackbar();\n  const user = useSelector(state => state.user);\n  console.log('user', user);\n  const navigate = useNavigate();\n  return /*#__PURE__*/React.createElement(Page, {\n    className: classes.root,\n    title: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, user.email !== 'duda-1258**' && /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: user.email,\n      name: user.name,\n      lastName: user.lastName,\n      phoneNumber: user.phoneNumber,\n      adress: user.adress,\n      githubLink: user.githubLink,\n      linkedin: user.linkedin\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      name: Yup.string().max(255).required('First name is required'),\n      lastName: Yup.string().max(255).required('Last name is required'),\n      phoneNumber: Yup.string().max(255).required('Phone number   is required')\n    }),\n    onSubmit: async values => {\n      const res = await axios.put(`http://localhost:3003/users/${user._id}`, values);\n      enqueueSnackbar('Profile updated', {\n        variant: 'success'\n      });\n      navigate('/app/account', {\n        replace: true\n      });\n      console.log('testy');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, ({\n    errors,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    isSubmitting,\n    touched,\n    values\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    subheader: \"The information can be edited\",\n    title: \"Profile Update\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.name && errors.name),\n    fullWidth: true,\n    helperText: touched.name && errors.name,\n    label: \"name\",\n    margin: \"normal\",\n    name: \"name\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.name,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.lastName && errors.lastName),\n    fullWidth: true,\n    helperText: touched.lastName && errors.lastName,\n    label: \"Last name\",\n    margin: \"normal\",\n    name: \"lastName\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.lastName,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.email && errors.email),\n    fullWidth: true,\n    helperText: touched.email && errors.email,\n    label: \"Email Address\",\n    margin: \"normal\",\n    name: \"email\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    type: \"email\",\n    value: values.email,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.phoneNumber && errors.phoneNumber),\n    fullWidth: true,\n    helperText: touched.phoneNumber && errors.phoneNumber,\n    label: \"phoneNumber\",\n    margin: \"normal\",\n    name: \"phoneNumber\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.phoneNumber,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.adress && errors.adress),\n    fullWidth: true,\n    helperText: touched.adress && errors.adress,\n    label: \"adress\",\n    margin: \"normal\",\n    name: \"adress\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.adress,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.githubLink && errors.githubLink),\n    fullWidth: true,\n    helperText: touched.githubLink && errors.githubLink,\n    label: \"githubLink\",\n    margin: \"normal\",\n    name: \"githubLink\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.githubLink,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    isSubmitting: true,\n    error: Boolean(touched.linkedin && errors.linkedin),\n    fullWidth: true,\n    helperText: touched.linkedin && errors.linkedin,\n    label: \"linkedin\",\n    margin: \"normal\",\n    name: \"linkedin\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.linkedin,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    disabled: isSubmitting,\n    fullWidth: true,\n    size: \"large\",\n    type: \"submit\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, \"Save details\")))))));\n};\n\n_s(ProfileDetails, \"zd1HhSYy9RIuQzGcXbVuqNHr3zo=\", false, function () {\n  return [useStyles, useSnackbar, useSelector, useNavigate];\n});\n\n_c = ProfileDetails;\nProfileDetails.propTypes = {\n  className: PropTypes.string\n};\nexport default ProfileDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileDetails\");","map":{"version":3,"sources":["/home/meriam/testwapp/WApplication/Partie Client/src/views/ProfilUpdate/ProfilUpdateView/ProfileDetails.js"],"names":["React","clsx","PropTypes","Page","Yup","Formik","Box","Button","Card","CardContent","CardHeader","Container","Divider","Grid","TextField","makeStyles","axios","Link","RouterLink","useNavigate","useSnackbar","useSelector","useStyles","root","ProfileDetails","className","rest","classes","enqueueSnackbar","closeSnackbar","user","state","console","log","navigate","email","name","lastName","phoneNumber","adress","githubLink","linkedin","object","shape","string","max","required","values","res","put","_id","variant","replace","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","propTypes"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,qBAAjB,C,CACA;;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,QAAwB,QAAxB;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,SANF,EAOEC,OAPF,EAQEC,IARF,EASEC,SATF,EAUEC,UAVF,QAWO,mBAXP;AAYA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAI,IAAIC,UAAjB,EAA6BC,WAA7B,QAAgD,kBAAhD;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,SAASC,WAAT,QAA2B,aAA3B;AAGA,MAAMC,SAAS,GAAGP,UAAU,CAAC,OAAO;AAClCQ,EAAAA,IAAI,EAAE;AAD4B,CAAP,CAAD,CAA5B;;AAIA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAa,KAAGC;AAAhB,CAAD,KAA4B;AAAA;;AACjD,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,QAAM;AAAEM,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAqCT,WAAW,EAAtD;AACA,QAAMU,IAAI,GAACT,WAAW,CAAEU,KAAK,IAAGA,KAAK,CAACD,IAAhB,CAAtB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBH,IAAnB;AAEF,QAAMI,QAAQ,GAAGf,WAAW,EAA5B;AAIE,sBAEG,oBAAC,IAAD;AACC,IAAA,SAAS,EAAEQ,OAAO,CAACJ,IADpB;AAEC,IAAA,KAAK,EAAC,UAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAID,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCO,IAAI,CAACK,KAAL,KAAe,aAAf,iBACK,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbA,MAAAA,KAAK,EAAEL,IAAI,CAACK,KADC;AAEbC,MAAAA,IAAI,EAAEN,IAAI,CAACM,IAFE;AAGbC,MAAAA,QAAQ,EAAEP,IAAI,CAACO,QAHF;AAIbC,MAAAA,WAAW,EAACR,IAAI,CAACQ,WAJJ;AAKdC,MAAAA,MAAM,EAACT,IAAI,CAACS,MALE;AAMZC,MAAAA,UAAU,EAACV,IAAI,CAACU,UANJ;AAOfC,MAAAA,QAAQ,EAAEX,IAAI,CAACW;AAPA,KADjB;AAUE,IAAA,gBAAgB,EACdrC,GAAG,CAACsC,MAAJ,GAAaC,KAAb,CAAmB;AACjBR,MAAAA,KAAK,EAAE/B,GAAG,CAACwC,MAAJ,GAAaT,KAAb,CAAmB,uBAAnB,EAA4CU,GAA5C,CAAgD,GAAhD,EAAqDC,QAArD,CAA8D,mBAA9D,CADU;AAEjBV,MAAAA,IAAI,EAAEhC,GAAG,CAACwC,MAAJ,GAAaC,GAAb,CAAiB,GAAjB,EAAsBC,QAAtB,CAA+B,wBAA/B,CAFW;AAGjBT,MAAAA,QAAQ,EAAEjC,GAAG,CAACwC,MAAJ,GAAaC,GAAb,CAAiB,GAAjB,EAAsBC,QAAtB,CAA+B,uBAA/B,CAHO;AAKjBR,MAAAA,WAAW,EAAClC,GAAG,CAACwC,MAAJ,GAAaC,GAAb,CAAiB,GAAjB,EAAsBC,QAAtB,CAA+B,4BAA/B;AALK,KAAnB,CAXJ;AAmBE,IAAA,QAAQ,EAAE,MAAOC,MAAP,IAAgB;AACvB,YAAMC,GAAG,GAAG,MAAMhC,KAAK,CAACiC,GAAN,CAAW,+BAA8BnB,IAAI,CAACoB,GAAI,EAAlD,EAAqDH,MAArD,CAAlB;AACAnB,MAAAA,eAAe,CAAC,iBAAD,EAAoB;AAACuB,QAAAA,OAAO,EAAC;AAAT,OAApB,CAAf;AACAjB,MAAAA,QAAQ,CAAC,cAAD,EAAiB;AAAEkB,QAAAA,OAAO,EAAE;AAAX,OAAjB,CAAR;AACDpB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACC,KAxBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA4BG,CAAC;AACAoB,IAAAA,MADA;AAEAC,IAAAA,UAFA;AAGAC,IAAAA,YAHA;AAIAC,IAAAA,YAJA;AAKAC,IAAAA,YALA;AAMAC,IAAAA,OANA;AAOAX,IAAAA;AAPA,GAAD,kBAQM;AAAM,IAAA,QAAQ,EAAES,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACb,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAC,+BADZ;AAEE,IAAA,KAAK,EAAC,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,IAAD;AACC,IAAA,SAAS,MADV;AAEC,IAAA,OAAO,EAAE,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIC,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,CAFN;AAGE,IAAA,EAAE,EAAE,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEG,OAAO,CAACD,OAAO,CAACtB,IAAR,IAAgBiB,MAAM,CAACjB,IAAxB,CADhB;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,UAAU,EAAEsB,OAAO,CAACtB,IAAR,IAAgBiB,MAAM,CAACjB,IAHvC;AAII,IAAA,KAAK,EAAC,MAJV;AAKI,IAAA,MAAM,EAAC,QALX;AAMI,IAAA,IAAI,EAAC,MANT;AAOI,IAAA,MAAM,EAAEkB,UAPZ;AAQI,IAAA,QAAQ,EAAEC,YARd;AASI,IAAA,KAAK,EAAER,MAAM,CAACX,IATlB;AAUI,IAAA,OAAO,EAAC,UAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAJD,eAsBC,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,CAFN;AAGE,IAAA,EAAE,EAAE,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEuB,OAAO,CAACD,OAAO,CAACrB,QAAR,IAAoBgB,MAAM,CAAChB,QAA5B,CADhB;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,UAAU,EAAEqB,OAAO,CAACrB,QAAR,IAAoBgB,MAAM,CAAChB,QAH3C;AAII,IAAA,KAAK,EAAC,WAJV;AAKI,IAAA,MAAM,EAAC,QALX;AAMI,IAAA,IAAI,EAAC,UANT;AAOI,IAAA,MAAM,EAAEiB,UAPZ;AAQI,IAAA,QAAQ,EAAEC,YARd;AASI,IAAA,KAAK,EAAER,MAAM,CAACV,QATlB;AAUI,IAAA,OAAO,EAAC,UAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAtBD,eAwCC,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,CAFN;AAGE,IAAA,EAAE,EAAE,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEsB,OAAO,CAACD,OAAO,CAACvB,KAAR,IAAiBkB,MAAM,CAAClB,KAAzB,CADhB;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,UAAU,EAAEuB,OAAO,CAACvB,KAAR,IAAiBkB,MAAM,CAAClB,KAHxC;AAII,IAAA,KAAK,EAAC,eAJV;AAKI,IAAA,MAAM,EAAC,QALX;AAMI,IAAA,IAAI,EAAC,OANT;AAOI,IAAA,MAAM,EAAEmB,UAPZ;AAQI,IAAA,QAAQ,EAAEC,YARd;AASI,IAAA,IAAI,EAAC,OATT;AAUI,IAAA,KAAK,EAAER,MAAM,CAACZ,KAVlB;AAWI,IAAA,OAAO,EAAC,UAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAxCD,eA2DC,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,CAFN;AAGE,IAAA,EAAE,EAAE,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEwB,OAAO,CAACD,OAAO,CAACpB,WAAR,IAAuBe,MAAM,CAACf,WAA/B,CADhB;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,UAAU,EAAEoB,OAAO,CAACpB,WAAR,IAAuBe,MAAM,CAACf,WAH9C;AAII,IAAA,KAAK,EAAC,aAJV;AAKI,IAAA,MAAM,EAAC,QALX;AAMI,IAAA,IAAI,EAAC,aANT;AAOI,IAAA,MAAM,EAAEgB,UAPZ;AAQI,IAAA,QAAQ,EAAEC,YARd;AAUI,IAAA,KAAK,EAAER,MAAM,CAACT,WAVlB;AAWI,IAAA,OAAO,EAAC,UAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CA3DD,eA8EE,oBAAC,IAAD;AACC,IAAA,IAAI,MADL;AAEC,IAAA,EAAE,EAAE,CAFL;AAGC,IAAA,EAAE,EAAE,EAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKC,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEqB,OAAO,CAACD,OAAO,CAACnB,MAAR,IAAkBc,MAAM,CAACd,MAA1B,CADhB;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,UAAU,EAAEmB,OAAO,CAACnB,MAAR,IAAkBc,MAAM,CAACd,MAHzC;AAII,IAAA,KAAK,EAAC,QAJV;AAKI,IAAA,MAAM,EAAC,QALX;AAMI,IAAA,IAAI,EAAC,QANT;AAOI,IAAA,MAAM,EAAEe,UAPZ;AAQI,IAAA,QAAQ,EAAEC,YARd;AAUI,IAAA,KAAK,EAAER,MAAM,CAACR,MAVlB;AAWI,IAAA,OAAO,EAAC,UAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CA9EF,eAiGE,oBAAC,IAAD;AACC,IAAA,IAAI,MADL;AAEC,IAAA,EAAE,EAAE,CAFL;AAGC,IAAA,EAAE,EAAE,EAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKC,oBAAC,SAAD;AACC,IAAA,KAAK,EAAEoB,OAAO,CAACD,OAAO,CAAClB,UAAR,IAAsBa,MAAM,CAACb,UAA9B,CADf;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,UAAU,EAAEkB,OAAO,CAAClB,UAAR,IAAsBa,MAAM,CAACb,UAH7C;AAII,IAAA,KAAK,EAAC,YAJV;AAKI,IAAA,MAAM,EAAC,QALX;AAMI,IAAA,IAAI,EAAC,YANT;AAOI,IAAA,MAAM,EAAEc,UAPZ;AAQI,IAAA,QAAQ,EAAEC,YARd;AAUI,IAAA,KAAK,EAAER,MAAM,CAACP,UAVlB;AAWI,IAAA,OAAO,EAAC,UAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CAjGF,eAqHE,oBAAC,IAAD;AACC,IAAA,IAAI,MADL;AAEC,IAAA,EAAE,EAAE,CAFL;AAGC,IAAA,EAAE,EAAE,EAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKC,oBAAC,SAAD;AACD,IAAA,YAAY,MADX;AACc,IAAA,KAAK,EAAEmB,OAAO,CAACD,OAAO,CAACjB,QAAR,IAAoBY,MAAM,CAACZ,QAA5B,CAD5B;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,UAAU,EAAEiB,OAAO,CAACjB,QAAR,IAAoBY,MAAM,CAACZ,QAH3C;AAII,IAAA,KAAK,EAAC,UAJV;AAKI,IAAA,MAAM,EAAC,QALX;AAMI,IAAA,IAAI,EAAC,UANT;AAOI,IAAA,MAAM,EAAEa,UAPZ;AAQI,IAAA,QAAQ,EAAEC,YARd;AAUI,IAAA,KAAK,EAAER,MAAM,CAACN,QAVlB;AAWI,IAAA,OAAO,EAAC,UAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CArHF,CADH,CANF,eAkJE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlJF,eAmJE,oBAAC,GAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,cAAc,EAAC,UAFjB;AAGE,IAAA,CAAC,EAAE,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,MAAD;AACC,IAAA,KAAK,EAAC,SADP;AAEW,IAAA,QAAQ,EAAEgB,YAFrB;AAGU,IAAA,SAAS,MAHnB;AAIU,IAAA,IAAI,EAAC,OAJf;AAKU,IAAA,IAAI,EAAC,QALf;AAMU,IAAA,OAAO,EAAC,WANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,CAnJF,CADa,CApCT,CAFN,CAJC,CAFH;AAuND,CAjOD;;GAAMjC,c;UACYF,S,EAC2BF,W,EAChCC,W,EAGIF,W;;;KANXK,c;AAmOLA,cAAc,CAACoC,SAAf,GAA2B;AACzBnC,EAAAA,SAAS,EAAEvB,SAAS,CAAC0C;AADI,CAA3B;AAID,eAAepB,cAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Page from 'src/components/Page';\n// partie add \nimport * as Yup from 'yup';\nimport { Formik  } from 'formik';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Container,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'axios';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\n\nimport  {useSelector} from 'react-redux';\n\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProfileDetails = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const user=useSelector((state =>state.user))\n  console.log('user',user)\n\nconst navigate = useNavigate();\n \n\n\n  return (\n    \n     <Page\n      className={classes.root}\n      title=\"Register\"\n    >\n    <Container maxWidth=\"sm\">\n    {user.email !== 'duda-1258**' &&\n          <Formik\n            initialValues={{\n              email: user.email,\n              name: user.name,\n              lastName: user.lastName,\n              phoneNumber:user.phoneNumber,                 \n             adress:user.adress,\n               githubLink:user.githubLink,\n            linkedin :user.linkedin,\n            }}\n            validationSchema={\n              Yup.object().shape({\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                name: Yup.string().max(255).required('First name is required'),\n                lastName: Yup.string().max(255).required('Last name is required'),\n                \n                phoneNumber:Yup.string().max(255).required('Phone number   is required'),\n              })\n            }\n            onSubmit={async (values)=>{\n               const res = await axios.put(`http://localhost:3003/users/${user._id}`, values)\n               enqueueSnackbar('Profile updated', {variant:'success'});\n               navigate('/app/account', { replace: true })\n              console.log('testy')\n              }\n            }\n   \n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (<form onSubmit={handleSubmit}>\n      <Card>\n        <CardHeader\n          subheader=\"The information can be edited\"\n          title=\"Profile Update\"\n        />\n        <Divider />\n        <CardContent>\n           <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                error={Boolean(touched.name && errors.name)}\n                  fullWidth\n                  helperText={touched.name && errors.name}\n                  label=\"name\"\n                  margin=\"normal\"\n                  name=\"name\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.name}\n                  variant=\"outlined\"\n              />\n            </Grid> \n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                error={Boolean(touched.lastName && errors.lastName)}\n                  fullWidth\n                  helperText={touched.lastName && errors.lastName}\n                  label=\"Last name\"\n                  margin=\"normal\"\n                  name=\"lastName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.lastName}\n                  variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                error={Boolean(touched.phoneNumber && errors.phoneNumber)}\n                  fullWidth\n                  helperText={touched.phoneNumber && errors.phoneNumber}\n                  label=\"phoneNumber\"\n                  margin=\"normal\"\n                  name=\"phoneNumber\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  \n                  value={values.phoneNumber}\n                  variant=\"outlined\"\n              />\n            </Grid> \n             <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                error={Boolean(touched.adress && errors.adress)}\n                  fullWidth\n                  helperText={touched.adress && errors.adress}\n                  label=\"adress\"\n                  margin=\"normal\"\n                  name=\"adress\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  \n                  value={values.adress}\n                  variant=\"outlined\"\n              />\n            </Grid>\n             <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n               error={Boolean(touched.githubLink && errors.githubLink)}\n                  fullWidth\n                  helperText={touched.githubLink && errors.githubLink}\n                  label=\"githubLink\"\n                  margin=\"normal\"\n                  name=\"githubLink\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  \n                  value={values.githubLink}\n                  variant=\"outlined\"\n               \n              />\n            </Grid> \n             <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n             isSubmitting   error={Boolean(touched.linkedin && errors.linkedin)}\n                  fullWidth\n                  helperText={touched.linkedin && errors.linkedin}\n                  label=\"linkedin\"\n                  margin=\"normal\"\n                  name=\"linkedin\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  \n                  value={values.linkedin}\n                  variant=\"outlined\"\n              >\n              </TextField>\n            </Grid> \n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n           color=\"primary\"\n                     disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\" \n          >\n             Save details\n           </Button>\n         </Box> \n       </Card>\n     </form> )}\n    </Formik>}\n    </Container>\n  </Page>\n    \n  );\n};\n\n ProfileDetails.propTypes = {\n   className: PropTypes.string\n };\n\nexport default ProfileDetails;\n"]},"metadata":{},"sourceType":"module"}