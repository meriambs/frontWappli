{"ast":null,"code":"var _jsxFileName = \"/home/meriam/testwapp/WApplication/Partie Client/src/layouts/DashboardLayout/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport NavBar from './NavBar';\nimport TopBar from './TopBar';\nimport NotFoundView from 'src/views/errors/NotFoundView';\nimport axios from 'axios';\nimport { setuser } from \"../../redux/action\";\nimport { useDispatch } from \"react-redux\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\nconst token = localStorage.getItem('token');\n\nconst DashboardLayout = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  if (!token) {\n    window.location.href = '/login';\n  }\n\n  ;\n  useEffect(() => {\n    const fetchUser = async () => {\n      if (!!token) {\n        const dis = await axios.get('http://localhost:3003/users', {\n          headers: {\n            \"x-auth-token\": token\n          }\n        });\n        dispatch(setuser(dis.data[0]));\n        console.log('dis', dis.data); //  ici on a la const enregistrée dan redux et la modification des nom du profil .\n      }\n    };\n\n    fetchUser();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, !!token ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TopBar, {\n    onMobileNavOpen: () => setMobileNavOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NavBar, {\n    onMobileClose: () => setMobileNavOpen(false),\n    openMobile: isMobileNavOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.contentContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Outlet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }))))) : /*#__PURE__*/React.createElement(NotFoundView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(DashboardLayout, \"CDQVjumQQ3lrih07+km+BHXKSHU=\", false, function () {\n  return [useDispatch, useStyles];\n});\n\n_c = DashboardLayout;\nexport default DashboardLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardLayout\");","map":{"version":3,"sources":["/home/meriam/testwapp/WApplication/Partie Client/src/layouts/DashboardLayout/index.js"],"names":["React","useState","useEffect","Outlet","makeStyles","NavBar","TopBar","NotFoundView","axios","setuser","useDispatch","useStyles","theme","root","backgroundColor","palette","background","dark","display","height","overflow","width","wrapper","flex","paddingTop","breakpoints","up","paddingLeft","contentContainer","content","token","localStorage","getItem","DashboardLayout","dispatch","classes","isMobileNavOpen","setMobileNavOpen","window","location","href","fetchUser","dis","get","headers","data","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport NavBar from './NavBar';\nimport TopBar from './TopBar';\nimport NotFoundView from 'src/views/errors/NotFoundView';\nimport axios from 'axios';\nimport { setuser } from \"../../redux/action\";\nimport { useDispatch } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\nconst token = localStorage.getItem('token');\nconst DashboardLayout = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n  if(!token) {\n    window.location.href='/login'\n  };\n  useEffect(() => {\n    const fetchUser = async() => {\n    if(!!token){\n     const dis = await axios.get('http://localhost:3003/users', {\n        headers: {\"x-auth-token\": token}\n    }\n    )\n    dispatch(setuser(dis.data[0]));\n console.log('dis',dis.data);\n    //  ici on a la const enregistrée dan redux et la modification des nom du profil .\n    \n  \n  }\n    };\n    fetchUser()\n  }, [])\n  return (\n    <div>\n    {!!token ?\n    <div className={classes.root}>\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <NavBar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n      />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n    : <NotFoundView />}\n    </div>)\n};\n\nexport default DashboardLayout;\n"]},"metadata":{},"sourceType":"module"}