{"ast":null,"code":"var _jsxFileName = \"/home/meriam/testwapp/WApplication/Partie Client/src/views/auth/RegisterView.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik, Field } from 'formik';\nimport { Box, Button, Checkbox, Container, FormHelperText, Link, TextField, Typography, makeStyles, RadioGroup, Radio, FormControlLabel } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst renderOptions = options => {\n  return options.map(option => /*#__PURE__*/React.createElement(FormControlLabel, {\n    key: option,\n    value: option,\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }\n    }),\n    label: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst FormikRadioGroup = ({\n  field,\n  form: {\n    touched,\n    errors\n  },\n  name,\n  options,\n  children,\n  ...props\n}) => {\n  const fieldName = name || field.name;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, Object.assign({}, field, props, {\n    name: fieldName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), options ? renderOptions(options) : children), touched[fieldName] && errors[fieldName] && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\",\n      fontFamily: \"sans-serif\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, errors[fieldName]));\n};\n\n_c = FormikRadioGroup;\n\nconst RegisterView = () => {\n  _s();\n\n  const classes = useStyles();\n  const navigate = useNavigate();\n  return /*#__PURE__*/React.createElement(Page, {\n    className: classes.root,\n    title: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      name: '',\n      lastName: '',\n      password: '',\n      userType: 'Candidate'\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      name: Yup.string().max(255).required('First name is required'),\n      lastName: Yup.string().max(255).required('Last name is required'),\n      password: Yup.string().max(255).required('password is required') // isRecruiter: Yup.boolean().oneOf([true], 'This field must be checked')\n\n    }),\n    onSubmit: async values => {\n      let isRecruiter = !(values.userType == 'Candidate');\n      delete values.userType;\n      const res = await axios.post(`${process.env.REACT_APP_URL}users`, { ...values,\n        isRecruiter\n      });\n      console.log('res', res);\n      navigate('/login', {\n        replace: true\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, ({\n    errors,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    isSubmitting,\n    touched,\n    values\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, \"Create new account\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }, \"Use your email to create new account\")), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.name && errors.name),\n    fullWidth: true,\n    helperText: touched.name && errors.name,\n    label: \"name\",\n    margin: \"normal\",\n    name: \"name\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.name,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.lastName && errors.lastName),\n    fullWidth: true,\n    helperText: touched.lastName && errors.lastName,\n    label: \"Last name\",\n    margin: \"normal\",\n    name: \"lastName\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.lastName,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.email && errors.email),\n    fullWidth: true,\n    helperText: touched.email && errors.email,\n    label: \"Email Address\",\n    margin: \"normal\",\n    name: \"email\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    type: \"email\",\n    value: values.email,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.password && errors.password),\n    fullWidth: true,\n    helperText: touched.password && errors.password,\n    label: \"Password\",\n    margin: \"normal\",\n    name: \"password\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    type: \"password\",\n    value: values.password,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"userType\",\n    options: [\"Recruiter\", \"Candidate\"],\n    component: FormikRadioGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    my: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    disabled: isSubmitting,\n    fullWidth: true,\n    size: \"large\",\n    type: \"submit\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }, \"Sign up now\")), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, \"Have an account?\", ' ', /*#__PURE__*/React.createElement(Link, {\n    component: RouterLink,\n    to: \"/login\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  }, \"Sign in\")))))));\n};\n\n_s(RegisterView, \"pvfM4ZXsoMI5DaOvCNwyBjRqjLg=\", false, function () {\n  return [useStyles, useNavigate];\n});\n\n_c2 = RegisterView;\nexport default RegisterView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormikRadioGroup\");\n$RefreshReg$(_c2, \"RegisterView\");","map":{"version":3,"sources":["/home/meriam/testwapp/WApplication/Partie Client/src/views/auth/RegisterView.js"],"names":["React","useState","Link","RouterLink","useNavigate","Yup","Formik","Field","Box","Button","Checkbox","Container","FormHelperText","TextField","Typography","makeStyles","RadioGroup","Radio","FormControlLabel","Page","axios","useStyles","theme","root","backgroundColor","palette","background","dark","height","paddingBottom","spacing","paddingTop","renderOptions","options","map","option","FormikRadioGroup","field","form","touched","errors","name","children","props","fieldName","color","fontFamily","RegisterView","classes","navigate","email","lastName","password","userType","object","shape","string","max","required","values","isRecruiter","res","post","process","env","REACT_APP_URL","console","log","replace","handleBlur","handleChange","handleSubmit","isSubmitting","Boolean"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useState} from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik , Field  } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography,\n  makeStyles,\n  RadioGroup,\n  Radio,\n  FormControlLabel\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\nimport axios from 'axios';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst renderOptions = (options) => {\n  return options.map((option) => (\n    <FormControlLabel\n      key={option}\n      value={option}\n      control={<Radio />}\n      label={option}\n    />\n  ));\n};\n\nconst FormikRadioGroup = ({\n  field,\n  form: { touched, errors },\n  name,\n  options,\n  children,\n  ...props\n}) => {\n  const fieldName = name || field.name;\n\n  return (\n    <React.Fragment>\n      <RadioGroup {...field} {...props} name={fieldName}>\n        {/* Here you either map over the props and render radios from them,\n         or just render the children if you're using the function as a child*/}\n        {options ? renderOptions(options) : children}\n      </RadioGroup>\n\n      {touched[fieldName] && errors[fieldName] && (\n        <span style={{ color: \"red\", fontFamily: \"sans-serif\" }}>\n          {errors[fieldName]}\n        </span>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst RegisterView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n \n  return (\n    <Page\n      className={classes.root}\n      title=\"Register\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: '',\n              name: '',\n              lastName: '',\n              password: '',\n              userType:'Candidate'\n            }}\n            validationSchema={\n              Yup.object().shape({\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                name: Yup.string().max(255).required('First name is required'),\n                lastName: Yup.string().max(255).required('Last name is required'),\n                password: Yup.string().max(255).required('password is required'),\n                // isRecruiter: Yup.boolean().oneOf([true], 'This field must be checked')\n              })\n            }\n            onSubmit={async(values) => {\n              let isRecruiter = !(values.userType =='Candidate')\n              delete values.userType;\n              const res = await axios.post(`${process.env.REACT_APP_URL}users`,{...values,isRecruiter})\n                            console.log('res', res);\n\n              navigate('/login', { replace: true })\n              \n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Create new account\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Use your email to create new account\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.name && errors.name)}\n                  fullWidth\n                  helperText={touched.name && errors.name}\n                  label=\"name\"\n                  margin=\"normal\"\n                  name=\"name\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.name}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.lastName && errors.lastName)}\n                  fullWidth\n                  helperText={touched.lastName && errors.lastName}\n                  label=\"Last name\"\n                  margin=\"normal\"\n                  name=\"lastName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.lastName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                            <Field\n              name=\"userType\"\n              options={[\"Recruiter\",\"Candidate\"]}\n              component={FormikRadioGroup}\n            />\n\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign up now\n                  </Button>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/login\"\n                    variant=\"h6\"\n                  >\n                    Sign in\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default RegisterView;\n"]},"metadata":{},"sourceType":"module"}