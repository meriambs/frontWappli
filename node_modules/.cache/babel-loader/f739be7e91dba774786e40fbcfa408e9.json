{"ast":null,"code":"var _jsxFileName = \"/home/meriam/testwapp/WApplication/Partie Client/src/views/Postuler/PostulerView/ProfileDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, Grid, Typography, makeStyles } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { DropzoneDialog } from 'material-ui-dropzone';\nimport { IconButton } from '@material-ui/core';\nimport { Link as RouterLink, useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport CameraRollIcon from '@material-ui/icons/CameraRoll';\nimport ReactRecorder from '../../recorder/recordrtc-react/src/RecordPage.react';\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProfileDetails = ({\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const classes = useStyles();\n  const user = useSelector(state => state.user);\n  const navigate = useNavigate();\n  const [open, setOpen] = useState(false);\n  const [video, setVideo] = useState(false);\n  const [cv, setCv] = useState();\n  const [videoBinary, setVideoBinary] = useState();\n  const [isVideoRecorded, setIsVideoRecorded] = useState(false);\n  const [isVideoUploaded, setIsVideoUploaded] = useState(false);\n  const [recording, setRecording] = useState(false);\n\n  const onRecordingComplete = blob => {\n    setVideoBinary(blob);\n    setIsVideoRecorded(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSave = async files => {\n    setCv(files[0]);\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const postuler = async () => {\n    let fd = new FormData();\n    fd.append('fname', 'cv.name');\n    fd.append('video', videoBinary);\n    fd.append('data', cv);\n    fd.append('offer', id);\n    const res = await axios.post(`http://localhost:3003/application/${user._id}`, fd, {\n      headers: {\n        'Content-Type': 'multipart'\n      }\n    });\n    navigate('/app/Job-offer', {\n      replace: true\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", Object.assign({\n    autoComplete: \"off\",\n    noValidate: true,\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    subheader: \"Some  information \",\n    title: \"Candidature Profile \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    fullWidth: true,\n    helperText: \"Please specify the first name\",\n    label: \"name\",\n    name: \"name\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Name:\"), user.name)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    fullWidth: true,\n    label: \"Last name\",\n    name: \"lastName\",\n    value: user.lastName,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"Last Name:\"), user.lastName)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    fullWidth: true,\n    label: \"Email Address\",\n    name: \"email\",\n    value: user.email,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, \"Email:\"), user.email)))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DropzoneDialog, {\n    open: open,\n    filesLimit: 1,\n    onSave: handleSave,\n    showPreviews: true,\n    maxFileSize: 5000000,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => setVideo(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CameraRollIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => setOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AttachFileIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: postuler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, \"Postuler !\"))), cv && /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, cv.name), video && /*#__PURE__*/React.createElement(ReactRecorder, {\n    onRecordingComplete: onRecordingComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 22\n    }\n  }));\n};\n\n_s(ProfileDetails, \"Cer9L3UhtOwDBevq6BFRYOy77SY=\", false, function () {\n  return [useParams, useStyles, useSelector, useNavigate];\n});\n\n_c = ProfileDetails;\nProfileDetails.propTypes = {\n  className: PropTypes.string\n};\nexport default ProfileDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileDetails\");","map":{"version":3,"sources":["/home/meriam/testwapp/WApplication/Partie Client/src/views/Postuler/PostulerView/ProfileDetails.js"],"names":["React","useState","clsx","PropTypes","AttachFileIcon","Box","Button","Card","CardContent","CardHeader","Divider","Grid","Typography","makeStyles","useSelector","DropzoneDialog","IconButton","Link","RouterLink","useParams","useNavigate","axios","CameraRollIcon","ReactRecorder","useStyles","root","ProfileDetails","className","rest","id","classes","user","state","navigate","open","setOpen","video","setVideo","cv","setCv","videoBinary","setVideoBinary","isVideoRecorded","setIsVideoRecorded","isVideoUploaded","setIsVideoUploaded","recording","setRecording","onRecordingComplete","blob","handleClose","handleSave","files","handleOpen","postuler","fd","FormData","append","res","post","_id","headers","replace","name","lastName","email","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport  {useSelector} from 'react-redux';\nimport {DropzoneDialog} from 'material-ui-dropzone';\nimport { IconButton } from '@material-ui/core';\nimport { Link as RouterLink,   useParams,useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport CameraRollIcon from '@material-ui/icons/CameraRoll';\n\nimport ReactRecorder from '../../recorder/recordrtc-react/src/RecordPage.react';\n\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n \nconst ProfileDetails = ({ className, ...rest }) => {\n  const {id}=useParams();\n  const classes = useStyles();\n  const user=useSelector((state =>state.user))\n  const navigate = useNavigate();\n \n const [open, setOpen] = useState(false);\n const [video,setVideo] = useState(false);\n const [cv,setCv]=useState();\n const [videoBinary, setVideoBinary] = useState();\n const [isVideoRecorded, setIsVideoRecorded] = useState(false);\n const [isVideoUploaded, setIsVideoUploaded] = useState(false);\n const [recording, setRecording] = useState(false);\n \n const onRecordingComplete = (blob) => {\n     setVideoBinary(blob)\n     setIsVideoRecorded(true)\n }\n \n    const handleClose = () => {\n        setOpen(false)\n    }\n    const handleSave = async (files) => {\n        setCv(files[0]);\n        setOpen(false)\n        }\n \n \n    const handleOpen = () => {\n        setOpen(true)\n    }\n    const postuler= async()=>{\n      let fd = new FormData();\n      fd.append('fname', 'cv.name');\n      fd.append('video', videoBinary);\n      fd.append('data', cv);\n      fd.append('offer', id);\n       const res = await axios.post(`http://localhost:3003/application/${user._id}`,fd, {\n        headers: {\n          'Content-Type': 'multipart'}});\n\nnavigate('/app/Job-offer', { replace: true })\n    }\n \n \n \n \n  return (\n    <form\n      autoComplete=\"off\"\n      noValidate\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Some  information \"\n          title=\"Candidature Profile \"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <Typography\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"name\"\n                name=\"name\"\n                variant=\"outlined\"\n              > <h3>Name:</h3>\n              {user.name}</Typography>\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <Typography\n                fullWidth\n                label=\"Last name\"\n                name=\"lastName\"\n                value={user.lastName}\n                variant=\"outlined\"\n              > <h3>Last Name:</h3>\n              {user.lastName}\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <Typography\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                value={user.email}\n                variant=\"outlined\"\n                > <h3>Email:</h3>\n              {user.email}\n              </Typography>  \n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n \n \n \n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <DropzoneDialog\n                open={open}\n                filesLimit={1}\n                onSave={handleSave}\n                showPreviews={true}\n                maxFileSize={5000000}\n                onClose={handleClose}\n            />\n            <IconButton onClick={()=>setVideo(true)}>\n              <CameraRollIcon/>\n            </IconButton>\n            <IconButton onClick={()=>setOpen(true)}>\n          <AttachFileIcon/>\n       </IconButton>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={postuler}\n          >\n            Postuler !\n          </Button>\n \n        </Box>\n      </Card>\n      {cv &&\n          <Typography >\n              {cv.name}\n \n          </Typography>}\n          {\n            video && <ReactRecorder onRecordingComplete={onRecordingComplete}/>\n          }\n    </form>\n  );\n};\n \nProfileDetails.propTypes = {\n  className: PropTypes.string\n};\n \nexport default ProfileDetails;\n "]},"metadata":{},"sourceType":"module"}