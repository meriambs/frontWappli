{"ast":null,"code":"import _defineProperty from\"/home/meriam/testwapp/WApplication/Partie Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"/home/meriam/testwapp/WApplication/Partie Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/home/meriam/testwapp/WApplication/Partie Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/home/meriam/testwapp/WApplication/Partie Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useState}from'react';import clsx from'clsx';import{Link as RouterLink,useNavigate}from'react-router-dom';import*as Yup from'yup';import{Formik}from'formik';import{Box,Button,Container,Card,CardContent,CardHeader,Divider,Grid,TextField,makeStyles}from'@material-ui/core';import Page from'src/components/Page';import axios from'axios';var useStyles=makeStyles(function(theme){return{root:{backgroundColor:theme.palette.background.dark,height:'100%',paddingBottom:theme.spacing(3),paddingTop:theme.spacing(3)}};});var ProfileDetails=function ProfileDetails(){var classes=useStyles();//ici c'est pour quand on valide il 'ya Link vers une autre page\nvar navigate=useNavigate();return/*#__PURE__*/React.createElement(Page,{className:classes.root,title:\"Register\"},/*#__PURE__*/React.createElement(Container,{maxWidth:\"sm\"},/*#__PURE__*/React.createElement(Formik,{initialValues:{SocieteName:'',adress:'',JobDescription:'',JobRequirements:'',HowToApply:'',recruteurName:''},validationSchema:Yup.object().shape({SocieteName:Yup.string().max(255).required('SocieteName is required'),adress:Yup.string().max(255).required('adress name is required'),JobDescription:Yup.string().max(255).required('JobDescription name is required'),JobRequirements:Yup.string().max(255).required('JobRequirements is required'),HowToApply:Yup.string().max(255).required('HowToApply is required'),recruteurName:Yup.string().max(255).required('recruteurName is required')// isRecruiter: Yup.boolean().oneOf([true], 'This field must be checked')\n}),onSubmit:/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.post('http://127.0.0.1:3003/post',_objectSpread({},values));case 2:res=_context.sent;console.log('res',res);navigate('/app/Job-offer',{replace:true});case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}()},function(_ref2){var errors=_ref2.errors,handleBlur=_ref2.handleBlur,handleChange=_ref2.handleChange,handleSubmit=_ref2.handleSubmit,isSubmitting=_ref2.isSubmitting,touched=_ref2.touched,values=_ref2.values;return/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,{subheader:\"The information can be edited\",title:\"Create Job Offer\"}),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Grid,{container:true,spacing:3},/*#__PURE__*/React.createElement(Grid,{item:true,md:6,xs:12},/*#__PURE__*/React.createElement(TextField,{error:Boolean(touched.SocieteName&&errors.SocieteName),fullWidth:true,helperText:touched.SocieteName&&errors.SocieteName,label:\"SocieteName\",name:\"SocieteName\",onBlur:handleBlur,onChange:handleChange,required:true,value:values.SocieteName,variant:\"outlined\"})),/*#__PURE__*/React.createElement(Grid,{item:true,md:6,xs:12},/*#__PURE__*/React.createElement(TextField,{error:Boolean(touched.adress&&errors.adress),fullWidth:true,helperText:touched.adress&&errors.adress,label:\"adress\",name:\"adress\",onBlur:handleBlur,onChange:handleChange,required:true,value:values.adress,variant:\"outlined\"})),/*#__PURE__*/React.createElement(Grid,{item:true,md:6,xs:12},/*#__PURE__*/React.createElement(TextField,{error:Boolean(touched.JobDescription&&errors.JobDescription),fullWidth:true,helperText:touched.JobDescription&&errors.JobDescription,label:\"JobDescription\",name:\"JobDescription\",onBlur:handleBlur,onChange:handleChange,required:true,value:values.JobDescription,variant:\"outlined\"})),/*#__PURE__*/React.createElement(Grid,{item:true,md:6,xs:12},/*#__PURE__*/React.createElement(TextField,{error:Boolean(touched.JobRequirements&&errors.JobRequirements),fullWidth:true,helperText:touched.JobRequirements&&errors.JobRequirements,label:\"JobRequirements\",name:\"JobRequirements\",onBlur:handleBlur,onChange:handleChange,required:true,value:values.JobRequirements,variant:\"outlined\"})),/*#__PURE__*/React.createElement(Grid,{item:true,md:6,xs:12},/*#__PURE__*/React.createElement(TextField,{error:Boolean(touched.HowToApply&&errors.HowToApply),fullWidth:true,helperText:touched.HowToApply&&errors.HowToApply,label:\"HowToApply\",name:\"HowToApply\",onBlur:handleBlur,onChange:handleChange,required:true,value:values.HowToApply,variant:\"outlined\"})),/*#__PURE__*/React.createElement(Grid,{item:true,md:6,xs:12},/*#__PURE__*/React.createElement(TextField,{error:Boolean(touched.recruteurName&&errors.recruteurName),fullWidth:true,helperText:touched.recruteurName&&errors.recruteurName,label:\"recruteurName\",name:\"recruteurName\",onBlur:handleBlur,onChange:handleChange,required:true,value:values.recruteurName,variant:\"outlined\"})))),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(Box,{display:\"flex\",justifyContent:\"flex-end\",p:2},/*#__PURE__*/React.createElement(Button,_defineProperty({disabled:isSubmitting,fullWidth:true,color:\"primary\",variant:\"contained\",type:\"submit\"},\"variant\",\"contained\"),\"Save details\"))));})));};export default ProfileDetails;","map":{"version":3,"sources":["/home/meriam/testwapp/WApplication/Partie Client/src/views/CreateJobOffer/JobCreateView/ProfileDetails.js"],"names":["React","useState","clsx","Link","RouterLink","useNavigate","Yup","Formik","Box","Button","Container","Card","CardContent","CardHeader","Divider","Grid","TextField","makeStyles","Page","axios","useStyles","theme","root","backgroundColor","palette","background","dark","height","paddingBottom","spacing","paddingTop","ProfileDetails","classes","navigate","SocieteName","adress","JobDescription","JobRequirements","HowToApply","recruteurName","object","shape","string","max","required","values","post","res","console","log","replace","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik  } from 'formik';\n\nimport {\n  Box,\n  Button,\n  Container,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst ProfileDetails = () => {\n  const classes = useStyles();\n  //ici c'est pour quand on valide il 'ya Link vers une autre page\n  const navigate = useNavigate();\n\n  return (\n     <Page\n      className={classes.root}\n      title=\"Register\"\n    >\n     <Container maxWidth=\"sm\">\n    {/* //debut partie Formik : */}\n\n<Formik\n            initialValues={{\n              SocieteName: '',\n              adress: '',\n              JobDescription: '',\n              JobRequirements: '',\n              HowToApply: '',\n              recruteurName: ''\n            }}\n            validationSchema={\n              Yup.object().shape({\n                SocieteName: Yup.string().max(255).required('SocieteName is required'),\n                adress: Yup.string().max(255).required('adress name is required'),\n                JobDescription: Yup.string().max(255).required('JobDescription name is required'),\n                JobRequirements: Yup.string().max(255).required('JobRequirements is required'),\n                HowToApply: Yup.string().max(255).required('HowToApply is required'),\n                recruteurName: Yup.string().max(255).required('recruteurName is required'),\n                // isRecruiter: Yup.boolean().oneOf([true], 'This field must be checked')\n              })\n            }\n            onSubmit={async(values) => {\n              const res = await axios.post('http://127.0.0.1:3003/post',{...values})\n                            console.log('res', res);\n\n              navigate('/app/Job-offer', { replace: true })\n              \n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n    <form onSubmit={handleSubmit}>\n      <Card>\n        <CardHeader\n          subheader=\"The information can be edited\"\n          title=\"Create Job Offer\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n              error={Boolean(touched.SocieteName && errors.SocieteName)}\n                fullWidth\n                helperText={touched.SocieteName && errors.SocieteName}\n                label=\"SocieteName\"\n                name=\"SocieteName\"\n                 onBlur={handleBlur}\n                onChange={handleChange}\n                required\n                value={values.SocieteName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n              error={Boolean(touched.adress && errors.adress)}\n                fullWidth\n                  helperText={touched.adress && errors.adress}\n                label=\"adress\"\n                name=\"adress\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                required\n                value={values.adress}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n               error={Boolean(touched.JobDescription && errors.JobDescription)}\n                fullWidth\n                helperText={touched.JobDescription && errors.JobDescription}\n                label=\"JobDescription\"\n                name=\"JobDescription\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                required\n                value={values.JobDescription}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n              error={Boolean(touched.JobRequirements && errors.JobRequirements)}\n                fullWidth\n                helperText={touched.JobRequirements && errors.JobRequirements}\n                label=\"JobRequirements\"\n                name=\"JobRequirements\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n               required\n                value={values.JobRequirements}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                error={Boolean(touched.HowToApply && errors.HowToApply)}\n                fullWidth\n                helperText={touched.HowToApply && errors.HowToApply}\n                label=\"HowToApply\"\n                name=\"HowToApply\"\n                 onBlur={handleBlur}\n                onChange={handleChange}\n                required\n                value={values.HowToApply}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                 error={Boolean(touched.recruteurName && errors.recruteurName)}\n                fullWidth\n                helperText={touched.recruteurName && errors.recruteurName}\n                label=\"recruteurName\"\n                name=\"recruteurName\"\n                 onBlur={handleBlur}\n                onChange={handleChange}\n                required\n                value={values.recruteurName}\n                variant=\"outlined\"\n              >\n              </TextField>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n          disabled={isSubmitting}\n             fullWidth\n            color=\"primary\"\n            variant=\"contained\"\n             type=\"submit\"\n            variant=\"contained\"\n          >\n            Save details\n          </Button>\n        </Box>\n       \n      </Card>\n    </form>\n    )}\n          </Formik>\n    </Container>\n    </Page>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProfileDetails;\n"]},"metadata":{},"sourceType":"module"}