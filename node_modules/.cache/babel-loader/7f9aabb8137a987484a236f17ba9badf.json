{"ast":null,"code":"var _jsxFileName = \"/home/meriam/testwapp/WApplication/Partie Client/src/views/customer/CandidatesListView/Results.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Avatar, Box, Card, Checkbox, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Typography, makeStyles, IconButton, Modal } from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\nimport CameraRollIcon from '@material-ui/icons/CameraRoll';\nimport SaveIcon from '@material-ui/icons/Save';\nimport axios from 'axios';\nimport { Link as RouterLink, useParams, useNavigate } from 'react-router-dom';\nimport data from './data';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  paper: {\n    position: 'absolute',\n    width: 1000,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nconst Results = ({\n  className,\n  data,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    id\n  } = useParams(); // partie get element\n\n  console.log('idddddd', id);\n  const [candidates, setCandidates] = useState([]);\n  useEffect(() => {\n    const fetchGetJobUser = async () => {\n      const res = await axios.get(`${process.env.REACT_APP_URL}application/offer/${id}`);\n      setCandidates(res.data);\n      console.log('verificatin donee', res.data);\n    };\n\n    fetchGetJobUser();\n  }, []); //  end get element\n\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [videoId, setVideoId] = useState(null);\n\n  const handleSelectAll = event => {\n    let newSelectedCustomerIds;\n\n    if (event.target.checked) {\n      newSelectedCustomerIds = jobuser.map(customer => customer.id);\n    } else {\n      newSelectedCustomerIds = [];\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomerIds.indexOf(id);\n    let newSelectedCustomerIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, selectedIndex), selectedCustomerIds.slice(selectedIndex + 1));\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleLimitChange = event => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const download = name => {\n    window.open(`${process.env.REACT_APP_URL}${name}`);\n  };\n\n  const openVideo = video => {\n    setVideoId(video);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setVideoId(null);\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    minWidth: 1050,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"Video\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, \"Download Ficher\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, candidates.map(customer => /*#__PURE__*/React.createElement(TableRow, {\n    hover: true,\n    key: customer.id,\n    selected: selectedCustomerIds.indexOf(customer.id) !== -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    alignItems: \"center\",\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    src: `${process.env.REACT_APP_URL}${customer.photo}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 23\n    }\n  }, getInitials(customer.name)), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 23\n    }\n  }, `${customer.user.name}  ${customer.user.lastName}`))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }, customer.user.email), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => openVideo(customer.video && customer.video._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CameraRollIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 20\n    }\n  }))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SaveIcon, {\n    onClick: () => download(customer.attachments[0].name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 20\n    }\n  }))))))))), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    style: {\n      top: '10%',\n      margin: 'auto',\n      left: '30%',\n      width: '1000px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"simple-modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, \"Application video\"), /*#__PURE__*/React.createElement(\"video\", {\n    width: \"100%\",\n    key: videoId,\n    id: \"videoPlayer\",\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: `${process.env.REACT_APP_URL}video/${videoId}`,\n    type: \"video/mp4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    component: \"div\",\n    count: candidates.length,\n    onChangePage: handlePageChange,\n    onChangeRowsPerPage: handleLimitChange,\n    page: page,\n    rowsPerPage: limit,\n    rowsPerPageOptions: [5, 10, 25],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Results, \"XF3S/X1DA8cLYTSEDEyAeDpsi3U=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = Results;\nResults.propTypes = {\n  className: PropTypes.string,\n  candidates: PropTypes.array.isRequired\n};\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["/home/meriam/testwapp/WApplication/Partie Client/src/views/customer/CandidatesListView/Results.js"],"names":["React","useState","useEffect","clsx","PropTypes","moment","PerfectScrollbar","Avatar","Box","Card","Checkbox","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Typography","makeStyles","IconButton","Modal","getInitials","CameraRollIcon","SaveIcon","axios","Link","RouterLink","useParams","useNavigate","data","useStyles","theme","root","avatar","marginRight","spacing","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","Results","className","rest","classes","id","console","log","candidates","setCandidates","fetchGetJobUser","res","get","process","env","REACT_APP_URL","selectedCustomerIds","setSelectedCustomerIds","limit","setLimit","page","setPage","open","setOpen","videoId","setVideoId","handleSelectAll","event","newSelectedCustomerIds","target","checked","jobuser","map","customer","handleSelectOne","selectedIndex","indexOf","concat","slice","length","handleLimitChange","value","handlePageChange","newPage","download","name","window","openVideo","video","handleClose","photo","user","lastName","email","_id","attachments","top","margin","left","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useState ,useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  makeStyles,\n  IconButton,\n  Modal\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\nimport CameraRollIcon from '@material-ui/icons/CameraRoll';\nimport SaveIcon from '@material-ui/icons/Save';\nimport axios from 'axios';\nimport { Link as RouterLink,   useParams,useNavigate } from 'react-router-dom';\nimport data from './data'\n \nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  paper: {\n    position: 'absolute',\n    width: 1000,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n \nconst Results = ({ className,data, ...rest }) => {\n  const classes = useStyles();\n  const { id } = useParams() \n  // partie get element\n  console.log('idddddd',id)\n  const [candidates,setCandidates] = useState([]);\n    useEffect(() => {\n      const fetchGetJobUser = async () =>{\n        const res = await axios.get(`${process.env.REACT_APP_URL}application/offer/${id}`);\n        setCandidates(res.data);\n        console.log('verificatin donee',res.data)\n \n       }\n       fetchGetJobUser();\n     }, []);\n    //  end get element\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [videoId, setVideoId] = useState(null)\n  const handleSelectAll = (event) => {\n    let newSelectedCustomerIds;\n \n    if (event.target.checked) {\n      newSelectedCustomerIds = jobuser.map((customer) => customer.id);\n    } else {\n      newSelectedCustomerIds = [];\n    }\n \n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n \n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomerIds.indexOf(id);\n    let newSelectedCustomerIds = [];\n \n    if (selectedIndex === -1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\n        selectedCustomerIds.slice(0, selectedIndex),\n        selectedCustomerIds.slice(selectedIndex + 1)\n      );\n    }\n \n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n \n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n \n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n \n  const download = (name)=>{\n    window.open(`${process.env.REACT_APP_URL}${name}`)\n  }\n  const openVideo = (video) => {\n    setVideoId(video);\n    setOpen(true);\n  }\n  const handleClose = () => {\n    setVideoId(null);\n    setOpen(false);\n  }\n  return (\n \n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <PerfectScrollbar>\n        <Box minWidth={1050}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {/* <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedCustomerIds.length === candidates.length}\n                    color=\"primary\"\n                    indeterminate={\n                      selectedCustomerIds.length > 0\n                      && selectedCustomerIds.length < candidates.length\n                    }\n                    onChange={handleSelectAll}\n                  />\n                </TableCell> */}\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Email\n                </TableCell>\n \n                <TableCell>\n                  Video\n                </TableCell>\n                <TableCell>\n                  Download Ficher\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {candidates.map((customer) => (\n                <TableRow\n                  hover\n                  key={customer.id}\n                  selected={selectedCustomerIds.indexOf(customer.id) !== -1}\n                >\n                  {/* <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedCustomerIds.indexOf(customer.id) !== -1}\n                      onChange={(event) => handleSelectOne(event, customer.id)}\n                      value=\"true\"\n                    />\n                  </TableCell> */}\n                  <TableCell>\n                    <Box\n                      alignItems=\"center\"\n                      display=\"flex\"\n                    >\n                      <Avatar\n                        className={classes.avatar}\n                        src={`${process.env.REACT_APP_URL}${customer.photo}`}\n                      >\n                        {getInitials(customer.name)}\n                      </Avatar>\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {`${customer.user.name}  ${customer.user.lastName}`} \n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {customer.user.email}\n                  </TableCell>\n \n                  <TableCell>\n                  <IconButton onClick={() => openVideo(customer.video && customer.video._id)}>\n                   <CameraRollIcon/>\n                   </IconButton>\n                  </TableCell>\n                  <TableCell>\n                    <IconButton>\n                   <SaveIcon\n                   onClick={()=>download(customer.attachments[0].name)}></SaveIcon>\n                  </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        style={{\n          top: '10%',\n          margin: 'auto',\n          left: '30%',\n          width: '1000px',\n        }}\n      >\n          <div className={classes.paper}>\n          <h2 id=\"simple-modal-title\">Application video</h2>\n          <video width=\"100%\" key={videoId} id=\"videoPlayer\" controls>\n                <source src={`${process.env.REACT_APP_URL}video/${videoId}`} type=\"video/mp4\" />\n            </video>\n        </div>\n \n      </Modal>\n      <TablePagination\n        component=\"div\"\n        count={candidates.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n \nResults.propTypes = {\n  className: PropTypes.string,\n  candidates: PropTypes.array.isRequired\n};\n \nexport default Results;\n \n"]},"metadata":{},"sourceType":"module"}